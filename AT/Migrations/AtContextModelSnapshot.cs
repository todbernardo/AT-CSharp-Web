// <auto-generated />
using System;
using AT.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AT.Migrations
{
    [DbContext(typeof(AtContext))]
    partial class AtContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("AT.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AT.Models.Destino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Destinos");
                });

            modelBuilder.Entity("AT.Models.PacoteTuristico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Preco")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PacotesTuristicos");
                });

            modelBuilder.Entity("AT.Models.PacoteTuristicoDestino", b =>
                {
                    b.Property<int>("PacoteTuristicoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DestinoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PacoteTuristicoId", "DestinoId");

                    b.HasIndex("DestinoId");

                    b.ToTable("PacoteTuristicoDestinos");
                });

            modelBuilder.Entity("AT.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("TEXT");

                    b.Property<int>("PacoteTuristicoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PacoteTuristicoId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("AT.Models.PacoteTuristicoDestino", b =>
                {
                    b.HasOne("AT.Models.Destino", "Destino")
                        .WithMany("PacoteTuristicoDestinos")
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AT.Models.PacoteTuristico", "PacoteTuristico")
                        .WithMany("PacoteTuristicoDestinos")
                        .HasForeignKey("PacoteTuristicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destino");

                    b.Navigation("PacoteTuristico");
                });

            modelBuilder.Entity("AT.Models.Reserva", b =>
                {
                    b.HasOne("AT.Models.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AT.Models.PacoteTuristico", "PacoteTuristico")
                        .WithMany("Reservas")
                        .HasForeignKey("PacoteTuristicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("PacoteTuristico");
                });

            modelBuilder.Entity("AT.Models.Cliente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("AT.Models.Destino", b =>
                {
                    b.Navigation("PacoteTuristicoDestinos");
                });

            modelBuilder.Entity("AT.Models.PacoteTuristico", b =>
                {
                    b.Navigation("PacoteTuristicoDestinos");

                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
